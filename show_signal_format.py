#!/usr/bin/env python3
"""
📊 TRADING SIGNAL FORMAT DEMONSTRATION
Shows the exact format of signals generated by the Telegram bot
"""

import random
from datetime import datetime, timedelta

def generate_sample_signal():
    """Generate a sample trading signal to show the format"""
    
    # Signal parameters (same as in working_telegram_bot.py)
    pairs = ["EUR/USD", "GBP/USD", "USD/JPY", "AUD/USD", "USD/CHF", "BTC/USD", "ETH/USD"]
    directions = ["📈 BUY", "📉 SELL"]
    
    pair = random.choice(pairs)
    direction = random.choice(directions)
    accuracy = round(random.uniform(88, 98), 1)
    confidence = round(random.uniform(82, 96), 1)
    strength = random.randint(7, 10)
    
    now = datetime.now()
    expiry_minutes = random.choice([2, 3, 5])
    expiry_time = now + timedelta(minutes=expiry_minutes)
    
    # This is the EXACT format sent to Telegram users
    signal_message = f"""🎯 **TRADING SIGNAL**

🟢 **Pair**: {pair}
{direction}
🎯 **Accuracy**: {accuracy}%
🤖 **AI Confidence**: {confidence}%
⏰ **Entry Time**: {now.strftime('%H:%M:%S')}
⏱️ **Expiry**: {expiry_time.strftime('%H:%M:%S')} ({expiry_minutes}min)

📊 **Technical Analysis**:
💹 **Trend**: {"Bullish" if "BUY" in direction else "Bearish"}
🎚️ **Volatility**: {"Low" if accuracy > 93 else "Medium"}
⚡ **Strength**: {strength}/10
🔥 **Quality**: {"Excellent" if accuracy > 95 else "Very Good"}

✅ **Signal Generated Successfully!**
💡 *Enter trade at specified time for best results*"""

    return signal_message, {
        'pair': pair,
        'direction': direction.replace('📈 ', '').replace('📉 ', ''),
        'accuracy': accuracy,
        'confidence': confidence,
        'strength': strength,
        'entry_time': now.strftime('%H:%M:%S'),
        'expiry_time': expiry_time.strftime('%H:%M:%S'),
        'expiry_minutes': expiry_minutes
    }

def show_signal_formats():
    """Show multiple signal format examples"""
    
    print("🚀 TELEGRAM BOT TRADING SIGNAL FORMATS")
    print("=" * 70)
    print()
    
    # Generate 3 sample signals
    for i in range(1, 4):
        print(f"📊 SIGNAL EXAMPLE #{i}")
        print("-" * 50)
        
        signal_text, signal_data = generate_sample_signal()
        print(signal_text)
        print()
        
        print("📋 SIGNAL DATA BREAKDOWN:")
        for key, value in signal_data.items():
            print(f"   {key.upper()}: {value}")
        
        print()
        print("🎯 INTERACTIVE BUTTONS SHOWN:")
        print("   [🔄 New Signal] [📈 Bot Status] [📚 Help]")
        print()
        print("=" * 70)
        print()

if __name__ == "__main__":
    show_signal_formats()